name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          cd client
          pnpm install

      - name: Build
        run: |
          cd client
          pnpm build

      - name: Delete remote .next directory
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 21098
          script: |
            echo "Deleting .next directory"
            rm -rf /home/woorapqt/apps/sunlah.com
            
      - name: Deploy project files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 21098
          source: "client/package.json,client/pnpm-lock.yaml,client/ecosystem.config.js,client/.next/,client/server.js"
          target: "/home/woorapqt/apps/sunlah.com"
          strip_components: 1

      - name: Sync public directory
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 21098
          script: |
            # Create public directory if it doesn't exist
            mkdir -p /home/woorapqt/apps/sunlah.com/public

      - name: Check public directory changes
        id: changed-files
        run: |
          # 이전 커밋과 현재 커밋의 public 폴더 파일 목록 비교
          git fetch --depth=2 origin main
          
          # 변경된 파일 목록을 임시 파일에 저장
          git diff --name-only HEAD^ HEAD | grep "^client/public/" > changed_files.txt || true
          
          # 삭제된 파일 목록을 임시 파일에 저장
          git diff --diff-filter=D --name-only HEAD^ HEAD | grep "^client/public/" > deleted_files.txt || true
          
          if [ -s changed_files.txt ] || [ -s deleted_files.txt ]; then
            echo "Public files changed or deleted. Deploying..."
            echo "changed=true" >> $GITHUB_OUTPUT
            # 파일 목록을 Base64로 인코딩하여 저장
            echo "files=$(cat changed_files.txt | base64 -w 0)" >> $GITHUB_OUTPUT
            echo "deleted=$(cat deleted_files.txt | base64 -w 0)" >> $GITHUB_OUTPUT
          else
            echo "No public files changed. Skipping deployment."
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Handle deleted files
        if: steps.changed-files.outputs.deleted
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 21098
          script: |
            cd /home/woorapqt/apps/sunlah.com/public
            # Base64로 인코딩된 삭제 파일 목록을 디코딩하여 처리
            echo "${{ steps.changed-files.outputs.deleted }}" | base64 -d | while read file; do
              relative_path=${file#client/public/}
              if [ ! -z "$relative_path" ]; then
                echo "Deleting $relative_path"
                rm -f "$relative_path"
              fi
            done

      - name: Deploy public files
        if: steps.changed-files.outputs.changed == 'true'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 21098
          source: "client/public/"
          target: "/home/woorapqt/apps/sunlah.com/public"
          strip_components: 2
          overwrite: true

      - name: Log changes
        if: steps.changed-files.outputs.changed == 'true'
        run: |
          echo "Changed public files:"
          echo "${{ steps.changed-files.outputs.files }}" | base64 -d

      - name: Install and Start Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 21098
          script: |
            cd /home/woorapqt/apps/sunlah.com
            
            # node_modules 삭제 후 재설치
            rm -rf node_modules
            
            # pnpm 전역 설치 확인
            if ! command -v pnpm &> /dev/null; then
              npm install -g pnpm
            fi
            
            # 의존성 설치
            pnpm install --prod

            # 기존 서버 프로세스 확인 및 재시작
            if pgrep -f "node server.js" > /dev/null; then
              echo "Restarting server..."
              pkill -f "node server.js"
              sleep 2
            fi

            # 서버 시작
            echo "Starting server..."
            NODE_ENV=production nohup node server.js > server.log 2>&1 &
            
            # 서버 시작 확인
            sleep 5
            if pgrep -f "node server.js" > /dev/null; then
              echo "Server started successfully!"
              # 최근 로그 확인
              tail -n 20 server.log
            else
              echo "Server failed to start. Check server.log for details."
              exit 1
            fi